import { configureStore } from '@reduxjs/toolkit'
import React from 'react'
import { rootReducer } from './rootReducer'

export const store = configureStore({
  reducer: rootReducer,
})

// export default store


// 1. Встановлюємо залежності для проєкта redux, react-redux, @reduxjs/toolkit
// 2. Папка редакс в СРС і в ній робимо стор (конфігурстор). (це глобальний обʼєкт стану застосунку).
// 3. Тут же створюємо рутРедʼюсер(комбайнредʼюсерз). Рут ред відповідає як раз за поля(змінні, властивості) стору і за функції, які ці поля змінюють.
// 4. Робимо слайси (... створювачі редʼюсерів і екшенів. за допомогою КріейтСлайс ). Кількість слайсів - кількість полів в рут редʼюсері.
// додаток до п.4:
// а. Якщо нам потрібні синхронні екшени - прописуємо в слайсі редʼюсерз. 
// б. Якщо потрібні асинхронні екшени то створюємо екстра редʼюсери (для кожного екшену робимо 3 стани - пендін, фулфілд, реджект), а ще Оперейшини. 
// 6. Для створення асинхронних пейлоад кріейтерів ми створюємо Оперейшнз за допомогою функції кріейтАсінкСанк. 
// 7. Для того, щоб запустити зміни стейту нам треба створити Діспатч (за доп ЮзДіспатч), передати йому або екшн, або оперейшн. 


// дописати санки. запрацювати модалка через стор.

// написати роутинг. 1 продукти всі. 2 сторінка замість модалки сторінка 1-го продуктаю ЮзПаразм. (5 домашка фільми) сторінку - список товарів які додав. 
// в корзині підрахувати вартість всіх товарів, які додавні в корзину.
// в корзині можна подивитись.. а можна і видалити. 


// 888888888888888888888888888888888888888888

// зробити 3 кнопку (додати в корзину)
// коли додаю - додається частина стора.. стор продуктс. додаткове поле баскет. коли додаю - потрапляє туди. Коли я переходжу на сторінку баскету (створіти). там відображається інфа про всі товари, які туди були додані. в корзині можна подивитись товари, а ще можна видалити. 
// якщо все ок - додати щоб корзина зберігалась в локал сторедж. (персіст).